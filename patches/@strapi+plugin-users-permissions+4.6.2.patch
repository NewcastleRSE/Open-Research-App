diff --git a/node_modules/@strapi/plugin-users-permissions/server/bootstrap/grant-config.js b/node_modules/@strapi/plugin-users-permissions/server/bootstrap/grant-config.js
index 31c612c..4c45e7d 100644
--- a/node_modules/@strapi/plugin-users-permissions/server/bootstrap/grant-config.js
+++ b/node_modules/@strapi/plugin-users-permissions/server/bootstrap/grant-config.js
@@ -111,6 +111,15 @@ module.exports = (baseURL) => ({
     callback: `${baseURL}/auth0/callback`,
     scope: ['openid', 'email', 'profile'],
   },
+  oricd: {
+    enabled: true,
+    icon: '',
+    key: '',
+    secret: '',
+    subdomain: 'my-tenant.eu',
+    callback: `${baseURL}/orcid/callback`,
+    scope: ['openid'],
+  },
   cas: {
     enabled: false,
     icon: 'book',
diff --git a/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js b/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js
index 6743f57..9b37b51 100644
--- a/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js
+++ b/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js
@@ -302,6 +302,38 @@ const getInitialProviders = ({ purest }) => ({
         };
       });
   },
+
+  async orcid({ accessToken }) {
+    const orcid = purest({
+      provider: 'orcid',
+      config: {
+        orcid: {
+          default: {
+            origin: 'https://pub.orcid.org',
+            path: 'v3.0/{path}',
+            headers: {
+              Authorization: 'Bearer {auth}',
+            },
+          },
+        },
+      },
+    });
+  
+    return orcid
+      .get('{orcid_id}/person')
+      .auth(accessToken)
+      .request()
+      .then(({ body }) => {
+        const fullName = `${body.name.givenNames.value} ${body.name.familyName.value}`;
+        const email = body.emails.email[0].value;
+  
+        return {
+          username: fullName,
+          email: email,
+        };
+      });
+  },  
+
   async patreon({ accessToken }) {
     const patreon = purest({
       provider: 'patreon',
